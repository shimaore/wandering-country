// Generated by CoffeeScript 1.12.5
(function() {
  var WanderingCountryReference, moment, post, seem,
    hasProp = {}.hasOwnProperty;

  moment = require('moment');

  seem = require('seem');

  post = function(result) {
    var k, ref, ref1, ref10, ref11, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, v;
    for (k in result) {
      if (!hasProp.call(result, k)) continue;
      v = result[k];
      v.egress_count = (ref = (ref1 = v.egress) != null ? ref1.count : void 0) != null ? ref : 0;
      v.egress_total = (ref2 = (ref3 = v.egress) != null ? ref3.sum : void 0) != null ? ref2 : 0;
      if ((v.egress_count != null) && v.egress_count > 0) {
        v.egress_average = v.egress_total / v.egress_count;
      }
      v.answered_count = (ref4 = (ref5 = v['ingress-answered']) != null ? ref5.count : void 0) != null ? ref4 : 0;
      v.answered_total = (ref6 = (ref7 = v['ingress-answered']) != null ? ref7.sum : void 0) != null ? ref6 : 0;
      if ((v.answered_count != null) && v.answered_count > 0) {
        v.answered_average = v.answered_total / v.answered_count;
      }
      v.unanswered_count = (ref8 = (ref9 = v['ingress-unanswered']) != null ? ref9.count : void 0) != null ? ref8 : 0;
      v.unanswered_total = (ref10 = (ref11 = v['ingress-unanswered']) != null ? ref11.sum : void 0) != null ? ref10 : 0;
      v.ingress_count = v.answered_count + v.unanswered_count;
      v.ingress_total = v.answered_total + v.unanswered_total;
      if ((v.ingress_count != null) && v.ingress_count > 0) {
        v.ingress_average = v.ingress_total / v.ingress_count;
      }
    }
    return result;
  };

  WanderingCountryReference = (function() {
    function WanderingCountryReference(ref_db) {
      this.ref_db = ref_db;
    }

    WanderingCountryReference.prototype.endpoint = function(endpoint, start_date, end_date) {
      return this._query('endpoint', endpoint, start_date, end_date);
    };

    WanderingCountryReference.prototype.endpoint_docs = function(endpoint, start_date, end_date) {
      return this._query('endpoint', endpoint, start_date, end_date, true);
    };

    WanderingCountryReference.prototype._query = seem(function*(type, type_value, start_date, end_date, include_docs) {
      var end_key, result, start_key, start_month;
      if (include_docs == null) {
        include_docs = false;
      }
      start_key = moment(start_date, 'YYYY-MM-DD').subtract(1, 'days');
      end_key = moment(end_date, 'YYYY-MM-DD').add(1, 'days');
      start_month = start_key.clone().startOf('month');
      result = {};
      while (start_month.isBefore(end_key)) {
        yield seem((function(_this) {
          return function*() {
            var db, i, len, results, row, rows;
            db = _this.ref_db(start_month.format('YYYY-MM'));
            if (db == null) {
              return;
            }
            rows = (yield db.query('grumpy-actor/tags', {
              startkey: [type, type_value, start_key.format('YYYY-MM-DD')],
              endkey: [type, type_value, end_key.format('YYYY-MM-DD')],
              group: !include_docs,
              reduce: !include_docs,
              include_docs: include_docs
            })).rows;
            yield db.close();
            db = null;
            results = [];
            for (i = 0, len = rows.length; i < len; i++) {
              row = rows[i];
              results.push((function(arg) {
                var _0, _1, date, doc, ref, tag, value;
                (ref = arg.key, _0 = ref[0], _1 = ref[1], date = ref[2], tag = ref[3]), value = arg.value, doc = arg.doc;
                if (include_docs) {
                  if (result[date] == null) {
                    result[date] = [];
                  }
                  return result[date].push(doc);
                } else {
                  if (result[date] == null) {
                    result[date] = {};
                  }
                  return result[date][tag] = value;
                }
              })(row));
            }
            return results;
          };
        })(this))();
        start_month.add(1, 'months');
        null;
      }
      return post(result);
    });

    return WanderingCountryReference;

  })();

  module.exports = {
    WanderingCountryReference: WanderingCountryReference
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVmZXJlbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicmVmZXJlbmNlLmNvZmZlZS5tZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUk7QUFBQSxNQUFBLDZDQUFBO0lBQUE7O0VBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxRQUFSOztFQUNULElBQUEsR0FBTyxPQUFBLENBQVEsTUFBUjs7RUFFUCxJQUFBLEdBQU8sU0FBQyxNQUFEO0FBQ0wsUUFBQTtBQUFBLFNBQUEsV0FBQTs7O01BSUUsQ0FBQyxDQUFDLFlBQUYsMkVBQW1DO01BSW5DLENBQUMsQ0FBQyxZQUFGLDJFQUFpQztNQUlqQyxJQUFHLHdCQUFBLElBQW9CLENBQUMsQ0FBQyxZQUFGLEdBQWlCLENBQXhDO1FBQ0UsQ0FBQyxDQUFDLGNBQUYsR0FBbUIsQ0FBQyxDQUFDLFlBQUYsR0FBaUIsQ0FBQyxDQUFDLGFBRHhDOztNQUtBLENBQUMsQ0FBQyxjQUFGLDBGQUFrRDtNQUNsRCxDQUFDLENBQUMsY0FBRix3RkFBZ0Q7TUFFaEQsSUFBRywwQkFBQSxJQUFzQixDQUFDLENBQUMsY0FBRixHQUFtQixDQUE1QztRQUNFLENBQUMsQ0FBQyxnQkFBRixHQUFxQixDQUFDLENBQUMsY0FBRixHQUFtQixDQUFDLENBQUMsZUFENUM7O01BS0EsQ0FBQyxDQUFDLGdCQUFGLDRGQUFzRDtNQUN0RCxDQUFDLENBQUMsZ0JBQUYsOEZBQW9EO01BSXBELENBQUMsQ0FBQyxhQUFGLEdBQWtCLENBQUMsQ0FBQyxjQUFGLEdBQW1CLENBQUMsQ0FBQztNQUl2QyxDQUFDLENBQUMsYUFBRixHQUFrQixDQUFDLENBQUMsY0FBRixHQUFtQixDQUFDLENBQUM7TUFJdkMsSUFBRyx5QkFBQSxJQUFxQixDQUFDLENBQUMsYUFBRixHQUFrQixDQUExQztRQUNFLENBQUMsQ0FBQyxlQUFGLEdBQW9CLENBQUMsQ0FBQyxhQUFGLEdBQWtCLENBQUMsQ0FBQyxjQUQxQzs7QUF0Q0Y7V0F5Q0E7RUExQ0s7O0VBOENEO0lBRVMsbUNBQUMsTUFBRDtNQUFDLElBQUMsQ0FBQSxTQUFEO0lBQUQ7O3dDQUliLFFBQUEsR0FBVSxTQUFDLFFBQUQsRUFBVyxVQUFYLEVBQXVCLFFBQXZCO2FBQ1IsSUFBQyxDQUFBLE1BQUQsQ0FBUSxVQUFSLEVBQW9CLFFBQXBCLEVBQThCLFVBQTlCLEVBQTBDLFFBQTFDO0lBRFE7O3dDQUdWLGFBQUEsR0FBZSxTQUFDLFFBQUQsRUFBVyxVQUFYLEVBQXVCLFFBQXZCO2FBQ2IsSUFBQyxDQUFBLE1BQUQsQ0FBUSxVQUFSLEVBQW9CLFFBQXBCLEVBQThCLFVBQTlCLEVBQTBDLFFBQTFDLEVBQW9ELElBQXBEO0lBRGE7O3dDQUdmLE1BQUEsR0FBUSxJQUFBLENBQUssVUFBQyxJQUFELEVBQU0sVUFBTixFQUFpQixVQUFqQixFQUE0QixRQUE1QixFQUFxQyxZQUFyQztBQUVYLFVBQUE7O1FBRmdELGVBQWU7O01BRS9ELFNBQUEsR0FBWSxNQUFBLENBQU8sVUFBUCxFQUFtQixZQUFuQixDQUNWLENBQUMsUUFEUyxDQUNBLENBREEsRUFDRyxNQURIO01BR1osT0FBQSxHQUFVLE1BQUEsQ0FBTyxRQUFQLEVBQWlCLFlBQWpCLENBQ1IsQ0FBQyxHQURPLENBQ0gsQ0FERyxFQUNBLE1BREE7TUFHVixXQUFBLEdBQWMsU0FBUyxDQUFDLEtBQVYsQ0FBQSxDQUNaLENBQUMsT0FEVyxDQUNILE9BREc7TUFHZCxNQUFBLEdBQVM7QUFFVCxhQUFNLFdBQVcsQ0FBQyxRQUFaLENBQXFCLE9BQXJCLENBQU47UUFDRSxNQUFTLElBQUEsQ0FBSyxDQUFBLFNBQUEsS0FBQTtpQkFBQSxVQUFBO0FBQ1osZ0JBQUE7WUFBQSxFQUFBLEdBQUssS0FBQyxDQUFBLE1BQUQsQ0FBUSxXQUFXLENBQUMsTUFBWixDQUFtQixTQUFuQixDQUFSO1lBQ0wsSUFBYyxVQUFkO0FBQUEscUJBQUE7O1lBQ0MsT0FBUSxDQUFBLE1BQU0sRUFBRSxDQUFDLEtBQUgsQ0FBUyxtQkFBVCxFQUNiO2NBQUEsUUFBQSxFQUFVLENBQ1IsSUFEUSxFQUVSLFVBRlEsRUFHUixTQUFTLENBQUMsTUFBVixDQUFpQixZQUFqQixDQUhRLENBQVY7Y0FLQSxNQUFBLEVBQVEsQ0FDTixJQURNLEVBRU4sVUFGTSxFQUdOLE9BQU8sQ0FBQyxNQUFSLENBQWUsWUFBZixDQUhNLENBTFI7Y0FVQSxLQUFBLEVBQU8sQ0FBSSxZQVZYO2NBV0EsTUFBQSxFQUFRLENBQUksWUFYWjtjQVlBLFlBQUEsRUFBYyxZQVpkO2FBRGEsQ0FBTjtZQWNULE1BQU0sRUFBRSxDQUFDLEtBQUgsQ0FBQTtZQUNOLEVBQUEsR0FBSztBQUVMO2lCQUFBLHNDQUFBOzsyQkFDSyxDQUFBLFNBQUMsR0FBRDtBQUNELG9CQUFBOzJCQURHLEtBQUssYUFBRyxhQUFHLGVBQUssZUFBSyxtQkFBTTtnQkFDOUIsSUFBRyxZQUFIOztvQkFDRSxNQUFPLENBQUEsSUFBQSxJQUFTOzt5QkFDaEIsTUFBTyxDQUFBLElBQUEsQ0FBSyxDQUFDLElBQWIsQ0FBa0IsR0FBbEIsRUFGRjtpQkFBQSxNQUFBOztvQkFJRSxNQUFPLENBQUEsSUFBQSxJQUFTOzt5QkFDaEIsTUFBTyxDQUFBLElBQUEsQ0FBTSxDQUFBLEdBQUEsQ0FBYixHQUFvQixNQUx0Qjs7Y0FEQyxDQUFBLENBQUgsQ0FBdUMsR0FBdkM7QUFERjs7VUFwQlk7UUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUwsQ0FBSCxDQUFBO1FBNkJOLFdBQVcsQ0FBQyxHQUFaLENBQWdCLENBQWhCLEVBQW1CLFFBQW5CO1FBQ0E7TUEvQkY7YUFpQ0EsSUFBQSxDQUFLLE1BQUw7SUE5Q1csQ0FBTDs7Ozs7O0VBZ0RWLE1BQU0sQ0FBQyxPQUFQLEdBQWlCO0lBQUMsMkJBQUEseUJBQUQ7O0FBN0dqQiIsInNvdXJjZXNDb250ZW50IjpbIiAgICBtb21lbnQgPSByZXF1aXJlICdtb21lbnQnXG4gICAgc2VlbSA9IHJlcXVpcmUgJ3NlZW0nXG5cbiAgICBwb3N0ID0gKHJlc3VsdCkgLT5cbiAgICAgIGZvciBvd24gaywgdiBvZiByZXN1bHRcblxuLSBudW1iZXIgb2YgZWdyZXNzIGNhbGxzXG5cbiAgICAgICAgdi5lZ3Jlc3NfY291bnQgPSB2LmVncmVzcz8uY291bnQgPyAwXG5cbi0gdG90YWwgKGJpbGxhYmxlKSBkdXJhdGlvbiBvZiBlZ3Jlc3MgY2FsbHNcblxuICAgICAgICB2LmVncmVzc190b3RhbCA9IHYuZWdyZXNzPy5zdW0gPyAwXG5cbi0gYXZlcmFnZSBlZ3Jlc3MgY2FsbCBkdXJhdGlvblxuXG4gICAgICAgIGlmIHYuZWdyZXNzX2NvdW50PyBhbmQgdi5lZ3Jlc3NfY291bnQgPiAwXG4gICAgICAgICAgdi5lZ3Jlc3NfYXZlcmFnZSA9IHYuZWdyZXNzX3RvdGFsIC8gdi5lZ3Jlc3NfY291bnRcblxuLSBudW1iZXIgb2YgYW5zd2VyZWQgY2FsbHNcblxuICAgICAgICB2LmFuc3dlcmVkX2NvdW50ID0gdlsnaW5ncmVzcy1hbnN3ZXJlZCddPy5jb3VudCA/IDBcbiAgICAgICAgdi5hbnN3ZXJlZF90b3RhbCA9IHZbJ2luZ3Jlc3MtYW5zd2VyZWQnXT8uc3VtID8gMFxuXG4gICAgICAgIGlmIHYuYW5zd2VyZWRfY291bnQ/IGFuZCB2LmFuc3dlcmVkX2NvdW50ID4gMFxuICAgICAgICAgIHYuYW5zd2VyZWRfYXZlcmFnZSA9IHYuYW5zd2VyZWRfdG90YWwgLyB2LmFuc3dlcmVkX2NvdW50XG5cbi0gbnVtYmVyIG9mIHVuYW5zd2VyZWQgY2FsbHNcblxuICAgICAgICB2LnVuYW5zd2VyZWRfY291bnQgPSB2WydpbmdyZXNzLXVuYW5zd2VyZWQnXT8uY291bnQgPyAwXG4gICAgICAgIHYudW5hbnN3ZXJlZF90b3RhbCA9IHZbJ2luZ3Jlc3MtdW5hbnN3ZXJlZCddPy5zdW0gPyAwXG5cbi0gbnVtYmVyIG9mIHJlY2VpdmVkIGNhbGxzXG5cbiAgICAgICAgdi5pbmdyZXNzX2NvdW50ID0gdi5hbnN3ZXJlZF9jb3VudCArIHYudW5hbnN3ZXJlZF9jb3VudFxuXG4tIHRvdGFsIGR1cmF0aW9uIG9uIGluZ3Jlc3MgY2FsbHNcblxuICAgICAgICB2LmluZ3Jlc3NfdG90YWwgPSB2LmFuc3dlcmVkX3RvdGFsICsgdi51bmFuc3dlcmVkX3RvdGFsXG5cbi0gYXZlcmFnZSBpbmdyZXNzIGNhbGwgZHVyYXRpb25cblxuICAgICAgICBpZiB2LmluZ3Jlc3NfY291bnQ/IGFuZCB2LmluZ3Jlc3NfY291bnQgPiAwXG4gICAgICAgICAgdi5pbmdyZXNzX2F2ZXJhZ2UgPSB2LmluZ3Jlc3NfdG90YWwgLyB2LmluZ3Jlc3NfY291bnRcblxuICAgICAgcmVzdWx0XG5cbiMjIyBFeHRlbmRlZCBDRFJzIChjbGllbnQtc2lkZSlcblxuICAgIGNsYXNzIFdhbmRlcmluZ0NvdW50cnlSZWZlcmVuY2VcblxuICAgICAgY29uc3RydWN0b3I6IChAcmVmX2RiKSAtPlxuXG5Gb3IgYSBnaXZlbiBlbmRwb2ludCBhbmQgYSBkYXRlLXJhbmdlLCByZXR1cm5zIGRhdGVzLCBhbmQgZm9yIGVhY2ggZGF0ZTpcblxuICAgICAgZW5kcG9pbnQ6IChlbmRwb2ludCwgc3RhcnRfZGF0ZSwgZW5kX2RhdGUpIC0+XG4gICAgICAgIEBfcXVlcnkgJ2VuZHBvaW50JywgZW5kcG9pbnQsIHN0YXJ0X2RhdGUsIGVuZF9kYXRlXG5cbiAgICAgIGVuZHBvaW50X2RvY3M6IChlbmRwb2ludCwgc3RhcnRfZGF0ZSwgZW5kX2RhdGUpIC0+XG4gICAgICAgIEBfcXVlcnkgJ2VuZHBvaW50JywgZW5kcG9pbnQsIHN0YXJ0X2RhdGUsIGVuZF9kYXRlLCB0cnVlXG5cbiAgICAgIF9xdWVyeTogc2VlbSAodHlwZSx0eXBlX3ZhbHVlLHN0YXJ0X2RhdGUsZW5kX2RhdGUsaW5jbHVkZV9kb2NzID0gZmFsc2UpIC0+XG5cbiAgICAgICAgc3RhcnRfa2V5ID0gbW9tZW50IHN0YXJ0X2RhdGUsICdZWVlZLU1NLUREJ1xuICAgICAgICAgIC5zdWJ0cmFjdCAxLCAnZGF5cydcblxuICAgICAgICBlbmRfa2V5ID0gbW9tZW50IGVuZF9kYXRlLCAnWVlZWS1NTS1ERCdcbiAgICAgICAgICAuYWRkIDEsICdkYXlzJ1xuXG4gICAgICAgIHN0YXJ0X21vbnRoID0gc3RhcnRfa2V5LmNsb25lKClcbiAgICAgICAgICAuc3RhcnRPZiAnbW9udGgnXG5cbiAgICAgICAgcmVzdWx0ID0ge31cblxuICAgICAgICB3aGlsZSBzdGFydF9tb250aC5pc0JlZm9yZSBlbmRfa2V5XG4gICAgICAgICAgeWllbGQgZG8gc2VlbSA9PlxuICAgICAgICAgICAgZGIgPSBAcmVmX2RiIHN0YXJ0X21vbnRoLmZvcm1hdCAnWVlZWS1NTSdcbiAgICAgICAgICAgIHJldHVybiB1bmxlc3MgZGI/XG4gICAgICAgICAgICB7cm93c30gPSB5aWVsZCBkYi5xdWVyeSAnZ3J1bXB5LWFjdG9yL3RhZ3MnLFxuICAgICAgICAgICAgICBzdGFydGtleTogW1xuICAgICAgICAgICAgICAgIHR5cGVcbiAgICAgICAgICAgICAgICB0eXBlX3ZhbHVlXG4gICAgICAgICAgICAgICAgc3RhcnRfa2V5LmZvcm1hdCAnWVlZWS1NTS1ERCdcbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICBlbmRrZXk6IFtcbiAgICAgICAgICAgICAgICB0eXBlXG4gICAgICAgICAgICAgICAgdHlwZV92YWx1ZVxuICAgICAgICAgICAgICAgIGVuZF9rZXkuZm9ybWF0ICdZWVlZLU1NLUREJ1xuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIGdyb3VwOiBub3QgaW5jbHVkZV9kb2NzXG4gICAgICAgICAgICAgIHJlZHVjZTogbm90IGluY2x1ZGVfZG9jc1xuICAgICAgICAgICAgICBpbmNsdWRlX2RvY3M6IGluY2x1ZGVfZG9jc1xuICAgICAgICAgICAgeWllbGQgZGIuY2xvc2UoKVxuICAgICAgICAgICAgZGIgPSBudWxsXG5cbiAgICAgICAgICAgIGZvciByb3cgaW4gcm93c1xuICAgICAgICAgICAgICBkbyAoe2tleTpbXzAsXzEsZGF0ZSx0YWddLHZhbHVlLGRvY30gPSByb3cpIC0+XG4gICAgICAgICAgICAgICAgaWYgaW5jbHVkZV9kb2NzXG4gICAgICAgICAgICAgICAgICByZXN1bHRbZGF0ZV0gPz0gW11cbiAgICAgICAgICAgICAgICAgIHJlc3VsdFtkYXRlXS5wdXNoIGRvY1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgIHJlc3VsdFtkYXRlXSA/PSB7fVxuICAgICAgICAgICAgICAgICAgcmVzdWx0W2RhdGVdW3RhZ10gPSB2YWx1ZVxuXG4gICAgICAgICAgc3RhcnRfbW9udGguYWRkIDEsICdtb250aHMnXG4gICAgICAgICAgbnVsbFxuXG4gICAgICAgIHBvc3QgcmVzdWx0XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IHtXYW5kZXJpbmdDb3VudHJ5UmVmZXJlbmNlfVxuIl19
//# sourceURL=/srv/home/stephane/Artisan/Managed/Telecoms/wandering-country/reference.coffee.md